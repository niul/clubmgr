<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    	http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.1.xsd
    	http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.1.xsd">


	<!-- Auto scan the components -->
	<context:annotation-config />
	<context:component-scan base-package="com.niulbird.clubmgr" />
	<jpa:repositories base-package="com.niulbird.clubmgr.db.repository" />
	<mvc:annotation-driven />
	<task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
	<task:executor id="myExecutor" pool-size="5"/>
	<task:scheduler id="myScheduler" pool-size="10"/>
	
	<!-- Message Source -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
      		<list>
        		<value>classpath:bfc-messages</value>
      		</list>
    	</property>
    </bean>
    
    <!-- Theme Change Interceptor and Resolver definition -->
	<bean id="themeSource"
		class="org.springframework.ui.context.support.ResourceBundleThemeSource">
			<property name="basenamePrefix" value="theme-" />
	</bean>
	<bean id="themeChangeInterceptor" class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
    	<property name="paramName" value="theme" />
	</bean>
	<bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
    	<property name="defaultThemeName" value="default" />
	</bean>
    
    <context:property-placeholder location="classpath:global-test.properties"/>
	<util:properties id="props" location="classpath:global-test.properties" />
 	
    <!-- Spring Mail configuration -->
 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="${mail.smtp.host}" />
    	<property name="port" value="${mail.smtp.port}" />
    	<property name="username" value="${mail.smtp.user}" />
    	<property name="password" value="${mail.smtp.pass}" />
    	<property name="javaMailProperties">
        	<props>
            	<!-- Use SMTP-AUTH to authenticate to SMTP server -->
            	<prop key="mail.smtp.auth">true</prop>
            	<!-- Use TLS to encrypt communication with SMTP server -->
            	<prop key="mail.smtp.starttls.enable">true</prop>
        	</props>
    	</property>
	</bean>
	
	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="to">
        	<value><![CDATA[${email.toName} <${email.toEmail}>]]></value>
    	</property>
		<property name="from">
        	<value><![CDATA[${email.fromName} <${email.fromEmail}>]]></value>
    	</property>
        <property name="subject" value="${email.subject}"/>
    </bean>
    
    <!-- Wordpress Service -->
    <bean id="wordPressDao" class="com.niulbird.clubmgr.util.wordpress.DefaultWordPressDao">
    	<property name="baseUrl" value="${wordpress.site.baseUrl}"/>
    	<property name="siteName" value="${wordpress.site.name}"/>
    </bean>
    
    <!-- Cache -->
    <cache:annotation-driven />
    <bean id="cacheManager"
      class="org.springframework.cache.ehcache.EhCacheCacheManager" 
      p:cache-manager-ref="ehcache"/>

	<!-- EhCache library setup -->
	<bean id="ehcache"
      class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
      p:config-location="classpath:ehcache.xml"
      p:shared="true"/>

	<!-- Datasource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
		
	<!-- session factory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.niulbird.clubmgr.db" />
		<property name="jpaVendorAdapter">
        	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      	</property>
      	<property name="jpaProperties">
        	<props>
            	<prop key="hibernate.hbm2ddl.auto">validate</prop>
            	<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
         	</props>
      	</property>
   	</bean>
   	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"
        proxy-target-class="true" />
</beans>
